"""Add telegram ID to users table

Revision ID: f8e69a3add91
Revises: 403bc2fa3a93
Create Date: 2024-02-09 14:01:12.671290

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f8e69a3add91'
down_revision = '403bc2fa3a93'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_users')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('telegram_id', sa.Integer(), nullable=True))
        batch_op.create_unique_constraint(batch_op.f('uq_users_telegram_id'), ['telegram_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users_telegram_id'), type_='unique')
        batch_op.drop_column('telegram_id')

    op.create_table('_alembic_tmp_users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('fullname', sa.VARCHAR(), nullable=False),
    sa.Column('telegram_id', sa.INTEGER(), server_default=sa.text("'0'"), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_users'),
    sa.UniqueConstraint('telegram_id', name='uq_users_telegram_id'),
    sa.UniqueConstraint('username', name='uq_users_username')
    )
    # ### end Alembic commands ###
